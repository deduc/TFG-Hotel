/*
	###########################################################
	BLOQUE DE CREACION DE TABLAS
	###########################################################
*/


CREATE TABLE TIPOS_DE_CAMAS(
	ID_TIPO_DE_CAMA		INT				NOT NULL    IDENTITY(1,1)           PRIMARY KEY,
	DESCRIPCION			VARCHAR(60)                 DEFAULT 'NULL_STRING',
);


-- INFORMACION SOBRE QUÉ TIPOS DE HABITACIONES PUEDE HABER EN LA BDD
CREATE TABLE TIPOS_DE_HABITACIONES(
    ID_TIPO_DE_HABITACION       INT             NOT NULL    PRIMARY KEY,
	ID_TIPO_DE_CAMA	            INT				NOT NULL    FOREIGN KEY REFERENCES TIPOS_DE_CAMAS(ID_TIPO_DE_CAMA),
    CATEGORIA		            VARCHAR(60)		            DEFAULT 'NULL_STRING',
    PRECIO      			    DECIMAL				        DEFAULT 1,
	DESCRIPCION		            VARCHAR(512)                DEFAULT 'NULL_STRING',
    IMG_HABITACION_BASE_64      VARCHAR(MAX)    NOT NULL    DEFAULT 'IMAGEN_SERIALIZADA_BASE_64',
	TAMAÑO			            INT                         DEFAULT 1,
    ENLACE_URL                  VARCHAR(MAX)    NOT NULL    DEFAULT 'NULL_URL',

    CONSTRAINT CONST_CH_TAMAÑO CHECK (TAMAÑO > 0),
    CONSTRAINT CONST_CH_PRECIO CHECK (PRECIO > 0),
);


-- CREO LAS HABITACIONES, CON SU ID Y QUE TIPO DE HABITACION ES
CREATE TABLE HABITACIONES(
	ID_HABITACION                       INT     NOT NULL    PRIMARY KEY,
    ID_TIPO_DE_HABITACION               INT     NOT NULL    FOREIGN KEY REFERENCES TIPOS_DE_HABITACIONES(ID_TIPO_DE_HABITACION),
    DISPONIBLE                          INT     NOT NULL    DEFAULT 1
);


CREATE TABLE CLIENTES(
	ID_CLIENTE		INT				NOT NULL    IDENTITY(1,1)   PRIMARY KEY,
	NOMBRE			VARCHAR(30)		NOT NULL,
	APELLIDOS       VARCHAR(60)     NOT NULL,
    USERNAME        VARCHAR(60)                     DEFAULT 'NULL_STRING',
	DNI				VARCHAR(9)		NOT NULL        UNIQUE,
    -- TODO: cambiar edad por fecha_nacimiento
	--EDAD            INT             NOT NULL,
    EMAIL           VARCHAR(60)     NOT NULL        UNIQUE,

	--CONSTRAINT CONST_CH_EDAD_BIGGER_EQUAL_THAN_18 CHECK(EDAD >= 18)
);


CREATE TABLE RESERVAS_DE_HABITACIONES(
	ID_RESERVA_HABITACION       INT		    NOT NULL    IDENTITY(1,1)   PRIMARY KEY,
	ID_CLIENTE			        INT		    NOT NULL	                FOREIGN KEY REFERENCES CLIENTES(ID_CLIENTE),
	ID_HABITACION		        INT		    NOT NULL                    FOREIGN KEY REFERENCES HABITACIONES(ID_HABITACION),
	FECHA_INICIO		        DATE	    NOT NULL,
	FECHA_FIN			        DATE	    NOT NULL,
    RESERVA_ACTIVA              INT                     DEFAULT 1,

	CONSTRAINT CONST_CH_FECHA_INICIO_LOWER_EQUAL_THAN_FECHA_FIN CHECK(FECHA_INICIO <= FECHA_FIN),
	CONSTRAINT CONST_CH_FECHA_INICIO_BIGGER_EQUAL_THAN_TODAYS_DATE CHECK( FECHA_INICIO >= CONVERT(date, GETDATE()) ),
	CONSTRAINT CONST_CH_FECHA_FIN_BIGGER_EQUAL_THAN_TODAYS_DATE CHECK( FECHA_FIN >= CONVERT(date, GETDATE()) ),
);


CREATE TABLE TIPOS_DE_SERVICIOS(
	ID_SERVICIO		    INT				NOT NULL	IDENTITY(1,1)   PRIMARY KEY,
    NOMBRE_SERVICIO     VARCHAR(120)    NOT NULL,
	DESCRIPCION		    VARCHAR(512)                DEFAULT 'NULL_STRING',
	PRECIO			    DECIMAL			NOT NULL,
    IMAGEN_BASE_64      VARCHAR(MAX)                DEFAULT 'IMAGEN_SERIALIZADA_BASE_64',
);


CREATE TABLE RESERVAS_DE_SERVICIOS(
    ID_RESERVA_SERVICIO     INT     IDENTITY(1,1)   PRIMARY KEY,
    ID_CLIENTE              INT                     FOREIGN KEY REFERENCES CLIENTES(ID_CLIENTE),
	ID_SERVICIO		        INT		                FOREIGN KEY REFERENCES TIPOS_DE_SERVICIOS(ID_SERVICIO),
    RESERVA_ACTIVA          INT     DEFAULT 1,
);


CREATE TABLE USUARIOS(
	ID_USUARIO		        INT				NOT NULL		IDENTITY(1,1)   PRIMARY KEY,
	USERNAME                VARCHAR(60)		NOT NULL		UNIQUE,
	EMAIL			        VARCHAR(60)		NOT NULL		UNIQUE,
    DNI			            VARCHAR(9)		NOT NULL		UNIQUE,
    NOMBRE                  VARCHAR(60)     NOT NULL,
    APELLIDOS               VARCHAR(60)     NOT NULL,
    -- TODO:    CONVERTIR LA CONTRASEÑA A CAMPO VARCHAR(MAX) Y CIFRARLA SIEMPRE CON MD5()
	PASS		            VARCHAR(120)    NOT NULL,
	-- un usuario por defecto NO es administrador
    FOTO_DE_PERFIL_BASE_64  VARCHAR(MAX)    NOT NULL        DEFAULT '',
	ADMINISTRADOR	        BIT             NOT NULL		DEFAULT 0,
    USUARIO_ACTIVO          BIT             NOT NULL        DEFAULT 1,

    -- TODO:    PREGUNTAR A DAWID QUÉ PK ELEGIR: ID_USUARIO O (USERNAME, EMAIL, DNI)
	--CONSTRAINT CONST_PK_ID_USUARIO PRIMARY KEY (USERNAME, EMAIL, DNI),
	CONSTRAINT CONST_CH_USERNAME_LENGTH CHECK ( LEN(USERNAME) > 0 ),
	CONSTRAINT CONST_CH_PASSWORD_LENGTH CHECK ( LEN(PASS) > 8 ),
	CONSTRAINT CONST_CH_EMAIL_LENGTH CHECK ( LEN(EMAIL) > 0 ),
);

/*
	###########################################################
	FIN DE BLOQUE DE CREACION DE TABLAS
	###########################################################
*/
